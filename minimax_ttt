#!/usr/bin/env python3
'''using the minimax algo. find the best possible move to make.
Minimax finds the best possible moves by applying a set of rules.
A win = 1, tie = 0, loss = -1 (for us). Assuming that each player chooses the best move
(we choose 1 if possible, opponent chooses -1). Starting at the top of a 'game tree',
generate the possible moves we can make. If It reaches a terminal state, stop. Otherwise keep searching in depth.
We find max.
'''
class TicTacToe:
    def __init__(self):
        self.board = [0,1,2,3,4,5,6,7,8]
        self.winning_combos = [[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,8]]
    def is_gameover(self, state, winning_combos):
        for combo in winning_combos:
            if (combo[0] == 'X' and combo[1] == 'X' and combo[2] == 'X') or (combo[0] == 'O' and combo[1] == 'O' and combo[2] == 'O'):
                return True
        return False
        
